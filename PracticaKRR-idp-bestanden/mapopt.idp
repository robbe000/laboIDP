//Robbe Goovaerts

/*  
 * mapopt.idp
 *
 */

vocabulary V {
	type Kleur
	type Land
    type aantal isa int
    Aantal : aantal
	Grens(Land, Land)
    ToegekendeKleur(Land): Kleur
}

structure S : V {
	Kleur = { Rood; Oranje; Geel; Groen; Blauw }
	Land = { Belgie; Nederland; Duitsland; Luxemburg; Frankrijk; Zwitserland; Oostenrijk }
    aantal = {0 .. 5}
	Grens = { 
		(Nederland,Belgie); 	 (Nederland,Duitsland);  (Belgie,Frankrijk);
		(Belgie,Luxemburg); 	 (Belgie,Duitsland); 	 (Luxemburg,Frankrijk); 
		(Luxemburg, Duitsland);  (Frankrijk,Duitsland);  (Frankrijk,Zwitserland); 
		(Duitsland,Zwitserland); (Duitsland,Oostenrijk); (Zwitserland,Oostenrijk); 
    }
}

theory T : V {
    !land1[Land] land2[Land]: Grens(land1, land2) => ToegekendeKleur(land1)  ~= ToegekendeKleur(land2).
    Aantal = #{k[Kleur]: ?l[Land]  : k = ToegekendeKleur(l)}.
}

term t: V {
    #{k[Kleur]: ?l[Land]  : k = ToegekendeKleur(l)}
}

procedure main() {
    stdoptions.nbmodels = 10
    printmodels(minimize(T, S, t))
    //printmodels(modelexpand(T,S))
}
